geom_hline(yintercept=last(OMX30$Close), linetype="dashed", color = "red") +
scale_x_date(date_breaks = "1 month", date_labels = "%b %Y") +
labs(title = "NASDAQ Stockholm OMX-30 Index",
caption = paste0("Source: Yahoo! Finance. Updated: ", lastdate,"."),
x = " ",
y = "OMX-30 Index") + theme_linedraw() +
theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "OMX30.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
require(readr)
require(data.table)
require(ggplot2)
require(dplyr)
# Download latest Google Community Mobility data
download.file("https://www.gstatic.com/covid19/mobility/Global_Mobility_Report.csv",
destfile = file.path("data", "Google", "Google.csv"), method = "curl", extra = c("-L"), quiet = FALSE)
# Store relevant data
destfile <- file.path("data", "Google", "Google.csv")
Google <-  data.table(read_csv(destfile))
Google_SE <- subset(Google, country_region_code == "SE" & is.na(sub_region_1)==1)
Google_SE[, date := as.Date(date, "%y-%m-%d")]
lastdate <- max(Google_SE$date)
# Create plot
p <- ggplot(Google_SE, aes(x=date)) +
geom_line(aes(y = parks_percent_change_from_baseline, colour = "Parks"),  size = 1) +
geom_line(aes(y = residential_percent_change_from_baseline, colour = "Residential"),  size = 1) +
geom_line(aes(y = grocery_and_pharmacy_percent_change_from_baseline, colour = "Grocery & pharmacy"),  size = 1) +
geom_line(aes(y = retail_and_recreation_percent_change_from_baseline, colour = "Retail & recreation"),  size = 1) +
geom_line(aes(y = workplaces_percent_change_from_baseline, colour = "Workplace"),  size = 1) +
geom_line(aes(y = transit_stations_percent_change_from_baseline, colour = "Transit stations"),  size = 1) +
scale_colour_manual("",
breaks = c("Parks", "Residential", "Grocery & pharmacy", "Retail & recreation", "Workplace", "Transit stations"),
values = c("red", "blue", "green", "orange", "black", "grey")) +
scale_x_date(date_breaks = "5 day", date_labels = "%d/%m") +
xlab(" ") +
labs(title = "Google Community Mobility Index for Sweden",
caption = paste0("Source: Google. Updated: ", lastdate,"."),
x = " ",
y = "Change relative to baseline (%)") + theme_linedraw() +
theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "google.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
library(readxl)
library(data.table)
library(ggplot2)
library(dplyr)
# Download latest data from Arbetsfï¿½rmedlingen Jan-March
download.file("https://arbetsformedlingen.se/download/18.47a458fb16df81b9133d5f5/1581081168259/varsel-riket-2020-01.xls",
destfile = file.path("data", "AF", "AF_Jan.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d9565432/1583502368823/varsel-riket-2020-02.xls",
destfile = file.path("data", "AF", "AF_Feb.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d956585b8/1586106682398/varsel-riket_2020-03.xls",
destfile = file.path("data", "AF", "AF_Mar.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d9565bfca/1588515009262/varsel-riket_2020-04.xls",
destfile = file.path("data", "AF", "AF_Apr.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d9565e94f/1590341346821/Varsel-riket_2020-05-22.xls",
destfile = file.path("data", "AF", "AF_May.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
# Store relevant data
destfile <- file.path("data", "AF", "AF_Jan.xls")
AF_Jan <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Jan, c("SNI", "Name", "N_not", "N"))
AF_Jan$Month <- "January"
destfile <- file.path("data", "AF", "AF_Feb.xls")
AF_Feb <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Feb, c("SNI", "Name", "N_not", "N"))
AF_Feb$Month <- "February"
destfile <- file.path("data", "AF", "AF_Mar.xls")
AF_Mar <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Mar, c("SNI", "Name", "N_not", "N"))
AF_Mar$Month <- "March"
destfile <- file.path("data", "AF", "AF_Apr.xls")
AF_Apr <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Apr, c("SNI", "Name", "N_not", "N"))
AF_Apr$Month <- "April"
destfile <- file.path("data", "AF", "AF_May.xls")
AF_May <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_May, c("SNI", "Name", "N_not", "N"))
AF_Apr$Month <- "May"
AF <- rbind(AF_Jan,AF_Feb,AF_Mar,AF_Apr,AF_May)
AF$N[is.na(AF$N)] <- 0
destfile <- file.path("data", "AF", "AF_May.xls")
AF_May <-  data.table((read_excel(destfile, sheet = 1, range="A12:D31", col_types = c("text","text","numeric","numeric"))))
setnames(AF_May, c("SNI", "Name", "N_not", "N"))
AF_Apr$Month <- "May"
AF <- rbind(AF_Jan,AF_Feb,AF_Mar,AF_Apr,AF_May)
AF$N[is.na(AF$N)] <- 0
destfile <- file.path("data", "AF", "AF_May.xls")
AF_May <-  data.table((read_excel(destfile, sheet = 1, range="A12:D31", col_types = c("text","text","numeric","numeric"))))
setnames(AF_May, c("SNI", "Name", "N_not", "N"))
AF_May$Month <- "May"
AF <- rbind(AF_Jan,AF_Feb,AF_Mar,AF_Apr,AF_May)
AF$N[is.na(AF$N)] <- 0
library(readxl)
library(data.table)
library(ggplot2)
library(dplyr)
# Download latest data from Arbetsfï¿½rmedlingen Jan-March
download.file("https://arbetsformedlingen.se/download/18.47a458fb16df81b9133d5f5/1581081168259/varsel-riket-2020-01.xls",
destfile = file.path("data", "AF", "AF_Jan.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d9565432/1583502368823/varsel-riket-2020-02.xls",
destfile = file.path("data", "AF", "AF_Feb.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d956585b8/1586106682398/varsel-riket_2020-03.xls",
destfile = file.path("data", "AF", "AF_Mar.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d9565bfca/1588515009262/varsel-riket_2020-04.xls",
destfile = file.path("data", "AF", "AF_Apr.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d9565e94f/1590341346821/Varsel-riket_2020-05-22.xls",
destfile = file.path("data", "AF", "AF_May.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
# Store relevant data
destfile <- file.path("data", "AF", "AF_Jan.xls")
AF_Jan <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Jan, c("SNI", "Name", "N_not", "N"))
AF_Jan$Month <- "January"
destfile <- file.path("data", "AF", "AF_Feb.xls")
AF_Feb <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Feb, c("SNI", "Name", "N_not", "N"))
AF_Feb$Month <- "February"
destfile <- file.path("data", "AF", "AF_Mar.xls")
AF_Mar <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Mar, c("SNI", "Name", "N_not", "N"))
AF_Mar$Month <- "March"
destfile <- file.path("data", "AF", "AF_Apr.xls")
AF_Apr <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Apr, c("SNI", "Name", "N_not", "N"))
AF_Apr$Month <- "April"
destfile <- file.path("data", "AF", "AF_May.xls")
AF_May <-  data.table((read_excel(destfile, sheet = 1, range="A12:D31", col_types = c("text","text","numeric","numeric"))))
setnames(AF_May, c("SNI", "Name", "N_not", "N"))
AF_May$Month <- "May"
AF <- rbind(AF_Jan,AF_Feb,AF_Mar,AF_Apr,AF_May)
AF$N[is.na(AF$N)] <- 0
AF$Month <- factor(AF$Month, levels = c("May", "April", "March", "February", "January"))
AF$SNI2[AF$SNI == "A"] <- "Agriculture"
AF$SNI2[AF$SNI == "B"] <- "Mining"
AF$SNI2[AF$SNI == "C"] <- "Manufacturing"
AF$SNI2[AF$SNI == "D"] <- "Electricity"
AF$SNI2[AF$SNI == "E"] <- "Water supply"
AF$SNI2[AF$SNI == "F"] <- "Construction"
AF$SNI2[AF$SNI == "G"] <- "Wholesale and retail"
AF$SNI2[AF$SNI == "H"] <- "Transportation"
AF$SNI2[AF$SNI == "I"] <- "Hotel and restaurant"
AF$SNI2[AF$SNI == "J"] <- "Information"
AF$SNI2[AF$SNI == "K"] <- "Finance"
AF$SNI2[AF$SNI == "L"] <- "Real estate"
AF$SNI2[AF$SNI == "M"] <- "Professional services"
AF$SNI2[AF$SNI == "N"] <- "Administration"
AF$SNI2[AF$SNI == "O"] <- "Public administration"
AF$SNI2[AF$SNI == "P"] <- "Education"
AF$SNI2[AF$SNI == "Q"] <- "Health"
AF$SNI2[AF$SNI == "R"] <- "Recreation"
AF$SNI2[AF$SNI == "S"] <- "Other services"
p <- ggplot(AF, aes(SNI2, N, group = Month)) +
geom_col(aes(fill = Month)) +
labs(title = "Advance layoff notifications by sector in 2020",
caption = paste0("Source: Swedish Public Employment Service. Updated: 2020-05-22."),
x = " ",
y = "Number of employees notified") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "layoff.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
# Store relevant data (update manually weekly)
destfile <- file.path("data", "AF", "AF_unemp.xlsx")
AF2 <-  data.table((read_excel(destfile, sheet = 2, range="A1:D53", col_types = c("numeric"))))
setnames(AF2, c("wk", "y18", "y19", "y20"))
# Store relevant data (update manually weekly)
destfile <- file.path("data", "AF", "AF_unemp.xlsx")
AF2 <-  data.table((read_excel(destfile, sheet = 1, range="A1:D53", col_types = c("numeric"))))
setnames(AF2, c("wk", "y18", "y19", "y20"))
View(AF2)
View(AF2)
require(readxl)
require(data.table)
require(ggplot2)
require(dplyr)
# Store relevant data (update manually weekly)
destfile <- file.path("data", "AF", "AF_unemp.xlsx")
AF2 <-  data.table((read_excel(destfile, sheet = 1, range="A1:D53", col_types = c("numeric"))))
setnames(AF2, c("wk", "y18", "y19", "y20"))
# Plot up until current week
current_wk <- strtoi(format(Sys.Date(), "%V"))
plotdata <- subset(AF2, wk <= current_wk + 10)
temp <- complete.cases(AF2)*AF2
lastweek <- max(temp$wk)
# Plot death toll
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = y20), color = "red", size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = y19), color = "grey") +
geom_line(aes(y = y18), color = "grey") +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +
labs(title = "Number unemployed registered at Swedish Public Employment Service 2018-2019 (grey) and 2020 (red)",
caption = paste0("Source: Registered unemployed at Swedish Public Employment Service. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Number of unemployed") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "unemp.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
require(readxl)
require(data.table)
require(ggplot2)
require(dplyr)
# Store relevant data (update manually weekly)
destfile <- file.path("data", "AF", "AF_unemp.xlsx")
AF2 <-  data.table((read_excel(destfile, sheet = 1, range="A1:D53", col_types = c("numeric"))))
setnames(AF2, c("wk", "y18", "y19", "y20"))
# Plot up until current week
current_wk <- strtoi(format(Sys.Date(), "%V"))
plotdata <- subset(AF2, wk <= current_wk + 10)
temp <- complete.cases(AF2)*AF2
lastweek <- max(temp$wk)
# Plot death toll
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = y20), color = "red", size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = y19), color = "black") +
geom_line(aes(y = y18), color = "grey") +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +
labs(title = "Number unemployed registered at Swedish Public Employment Service",
caption = paste0("Source: Swedish Public Employment Service. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Number of unemployed") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "unemp.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
# Plot death toll
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = y20), color = "red", size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = y19), color = "black") +
geom_line(aes(y = y18), color = "grey") +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +  xlab(" ") +
labs(title = "Number unemployed registered at Swedish Public Employment Service",
caption = paste0("Source: Swedish Public Employment Service. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Number of unemployed") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "unemp.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = N_dead, colour = "Deaths"),  size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = N_case, colour = "Cases"),  size = 1) +
geom_line(aes(y = N_ICU, colour = "ICU"),  size = 1) +
scale_colour_manual("", breaks = c("Deaths", "Cases", "ICU"), values = c("red", "black", "orange")) +
scale_colour_manual("", breaks = c("y20", "y19", "y18"), values = c("red", "black", "grey")) +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +  xlab(" ") +
labs(title = "Number unemployed registered at Swedish Public Employment Service",
caption = paste0("Source: Swedish Public Employment Service. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Number of unemployed") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "unemp.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = y20), color = "y20", size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = y19), color = "y19") +
geom_line(aes(y = y18), color = "y18") +
scale_colour_manual("", breaks = c("y20", "y19", "y18"), values = c("red", "black", "grey")) +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +  xlab(" ") +
labs(title = "Number unemployed registered at Swedish Public Employment Service",
caption = paste0("Source: Swedish Public Employment Service. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Number of unemployed") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "unemp.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = y20, colour = "y20"), size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = y19, colour = "y19"), size = 1)  +
geom_line(aes(y = y18, colour = "y18"), size = 1)  +
scale_colour_manual("", breaks = c("y20", "y19", "y18"), values = c("red", "black", "grey")) +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +  xlab(" ") +
labs(title = "Number unemployed registered at Swedish Public Employment Service",
caption = paste0("Source: Swedish Public Employment Service. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Number of unemployed") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "unemp.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = y20, colour = "y20"), size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = y19, colour = "y19"), size = 1)  +
geom_line(aes(y = y18, colour = "y18"), size = 1)  +
scale_colour_manual("", breaks = c("y20", "y19", "y18"), values = c("black", "grey", "red")) +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +  xlab(" ") +
labs(title = "Number unemployed registered at Swedish Public Employment Service",
caption = paste0("Source: Swedish Public Employment Service. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Number of unemployed") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "unemp.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = y20, colour = "y20"), size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = y19, colour = "y19"), size = 1)  +
geom_line(aes(y = y18, colour = "y18"), size = 1)  +
scale_colour_manual("", breaks = c("2020", "2019", "2018"), values = c("grey", "black", "red")) +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +  xlab(" ") +
labs(title = "Number unemployed registered at Swedish Public Employment Service",
caption = paste0("Source: Swedish Public Employment Service. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Number of unemployed") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "unemp.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
require(dplyr)
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = y20, colour = "y2020"), size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = y19, colour = "y2019"), size = 1)  +
geom_line(aes(y = y18, colour = "y2018"), size = 1)  +
scale_colour_manual("", breaks = c("y2020", "y2019", "y2018"), values = c("grey", "black", "red")) +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +  xlab(" ") +
labs(title = "Number unemployed registered at Swedish Public Employment Service",
caption = paste0("Source: Swedish Public Employment Service. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Number of unemployed") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "unemp.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
?scale_colour_manual
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = y20, colour = "y2020"), size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = y19, colour = "y2019"), size = 1)  +
geom_line(aes(y = y18, colour = "y2018"), size = 1)  +
scale_colour_manual("", breaks = c("y2020", "y2019", "y2018"), values = c("grey", "black", "red"), labels = c("2020", "2019", "2018")) +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +  xlab(" ") +
labs(title = "Number unemployed registered at Swedish Public Employment Service",
caption = paste0("Source: Swedish Public Employment Service. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Number of unemployed") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "unemp.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
library(readxl)
library(data.table)
library(ggplot2)
library(dplyr)
# Download latest data from Arbetsfï¿½rmedlingen Jan-March
download.file("https://arbetsformedlingen.se/download/18.47a458fb16df81b9133d5f5/1581081168259/varsel-riket-2020-01.xls",
destfile = file.path("data", "AF", "AF_Jan.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d9565432/1583502368823/varsel-riket-2020-02.xls",
destfile = file.path("data", "AF", "AF_Feb.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d956585b8/1586106682398/varsel-riket_2020-03.xls",
destfile = file.path("data", "AF", "AF_Mar.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d9565bfca/1588515009262/varsel-riket_2020-04.xls",
destfile = file.path("data", "AF", "AF_Apr.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d95651129d/1591518873752/varsel-riket-2020-05.xls",
destfile = file.path("data", "AF", "AF_May.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
download.file("https://arbetsformedlingen.se/download/18.2bef8e33170a57d9565112d4/1591536656036/Varsel-riket_2020-06-05.xls",
destfile = file.path("data", "AF", "AF_June.xls"), method = "curl", extra = c("-L"), quiet = FALSE)
# Store relevant data
destfile <- file.path("data", "AF", "AF_Jan.xls")
AF_Jan <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Jan, c("SNI", "Name", "N_not", "N"))
AF_Jan$Month <- "January"
destfile <- file.path("data", "AF", "AF_Feb.xls")
AF_Feb <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Feb, c("SNI", "Name", "N_not", "N"))
AF_Feb$Month <- "February"
destfile <- file.path("data", "AF", "AF_Mar.xls")
AF_Mar <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Mar, c("SNI", "Name", "N_not", "N"))
AF_Mar$Month <- "March"
destfile <- file.path("data", "AF", "AF_Apr.xls")
AF_Apr <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_Apr, c("SNI", "Name", "N_not", "N"))
AF_Apr$Month <- "April"
destfile <- file.path("data", "AF", "AF_May.xls")
AF_May <-  data.table((read_excel(destfile, sheet = 1, range="A7:D26", col_types = c("text","text","numeric","numeric"))))
setnames(AF_May, c("SNI", "Name", "N_not", "N"))
AF_May$Month <- "May"
destfile <- file.path("data", "AF", "AF_June.xls")
AF_June <-  data.table((read_excel(destfile, sheet = 1, range="A12:D31", col_types = c("text","text","numeric","numeric"))))
setnames(AF_June, c("SNI", "Name", "N_not", "N"))
AF_June$Month <- "June"
AF <- rbind(AF_Jan,AF_Feb,AF_Mar,AF_Apr,AF_May,AF_June)
AF$N[is.na(AF$N)] <- 0
AF$Month <- factor(AF$Month, levels = c("June", "May", "April", "March", "February", "January"))
AF$SNI2[AF$SNI == "A"] <- "Agriculture"
AF$SNI2[AF$SNI == "B"] <- "Mining"
AF$SNI2[AF$SNI == "C"] <- "Manufacturing"
AF$SNI2[AF$SNI == "D"] <- "Electricity"
AF$SNI2[AF$SNI == "E"] <- "Water supply"
AF$SNI2[AF$SNI == "F"] <- "Construction"
AF$SNI2[AF$SNI == "G"] <- "Wholesale and retail"
AF$SNI2[AF$SNI == "H"] <- "Transportation"
AF$SNI2[AF$SNI == "I"] <- "Hotel and restaurant"
AF$SNI2[AF$SNI == "J"] <- "Information"
AF$SNI2[AF$SNI == "K"] <- "Finance"
AF$SNI2[AF$SNI == "L"] <- "Real estate"
AF$SNI2[AF$SNI == "M"] <- "Professional services"
AF$SNI2[AF$SNI == "N"] <- "Administration"
AF$SNI2[AF$SNI == "O"] <- "Public administration"
AF$SNI2[AF$SNI == "P"] <- "Education"
AF$SNI2[AF$SNI == "Q"] <- "Health"
AF$SNI2[AF$SNI == "R"] <- "Recreation"
AF$SNI2[AF$SNI == "S"] <- "Other services"
p <- ggplot(AF, aes(SNI2, N, group = Month)) +
geom_col(aes(fill = Month)) +
labs(title = "Advance layoff notifications by sector in 2020",
caption = paste0("Source: Swedish Public Employment Service. Updated: 2020-05-22."),
x = " ",
y = "Number of employees notified") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
axis.text.x = element_text(angle = 90, hjust = 1),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "layoff.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
require(readxl)
require(data.table)
require(ggplot2)
require(dplyr)
# Store relevant data (update manually weekly)
destfile <- file.path("data", "AF", "AF_unemp.xlsx")
AF2 <-  data.table((read_excel(destfile, sheet = 1, range="A1:D53", col_types = c("numeric"))))
setnames(AF2, c("wk", "y18", "y19", "y20"))
# Plot up until current week
current_wk <- strtoi(format(Sys.Date(), "%V"))
plotdata <- subset(AF2, wk <= current_wk + 10)
temp <- complete.cases(AF2)*AF2
lastweek <- max(temp$wk)
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = y20, colour = "y2020"), size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = y19, colour = "y2019"), size = 1)  +
geom_line(aes(y = y18, colour = "y2018"), size = 1)  +
scale_colour_manual("", breaks = c("y2020", "y2019", "y2018"), values = c("red", "black", "grey"), labels = c("2020", "2019", "2018")) +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +  xlab(" ") +
labs(title = "Number unemployed registered at Swedish Public Employment Service",
caption = paste0("Source: Swedish Public Employment Service. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Number of unemployed") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "unemp.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
require(readxl)
require(data.table)
require(ggplot2)
require(dplyr)
# Download latest Socialstyrelsen data and save Excel file
download.file("https://www.socialstyrelsen.se/globalassets/sharepoint-dokument/dokument-webb/statistik/antal-doda-per-100000-per-lan-och-vecka-2015-2020.xlsx",
destfile = file.path("data", "SS", "SS_latest.xlsx"), method = "curl", extra = c("-L"), quiet = FALSE)
# Store relevant data
destfile <- file.path("data", "SS", "SS_latest.xlsx")
SS <-  data.table((read_excel(destfile, sheet = 2, range="A5:G57", col_types = c("numeric"))))
setnames(SS, c("wk", "y15", "y16", "y17", "y18", "y19", "y20"))
#skip=4, n_max = 52
# Plot up until current week
current_wk <- strtoi(format(Sys.Date(), "%V"))
plotdata <- subset(SS, wk <= current_wk + 10)
temp <- complete.cases(SS)*SS
lastweek <- max(temp$wk)
# Plot death toll
p <- ggplot(plotdata, aes(x=wk)) +
geom_line(aes(y = y20), color = "red", size = 1) + geom_point(aes(y=y20), color = "red") +
geom_line(aes(y = y19), color = "grey") +
geom_line(aes(y = y18), color = "grey") +
geom_line(aes(y = y17), color = "grey") +
geom_line(aes(y = y16), color = "grey") +
geom_line(aes(y = y15), color = "grey") +
scale_x_continuous(breaks = seq(1,current_wk+10,by = 1)) +
labs(title = "Weekly number of deaths in Sweden 2015-2019 (grey) and 2020 (red)",
caption = paste0("Source: National Board of Health and Welfare. Updated: Week ", lastweek, " 2020."),
x = "Week",
y = "Weekly number of deaths per 100,000 inhabitants") + theme_linedraw() + theme(panel.border = element_blank(),
panel.grid.major = element_line(linetype = "dotted", color = "grey60", size = 0.2),
panel.grid.minor = element_line(linetype = "dotted", color = "grey80", size = 0.2),
plot.title = element_text(size = 20))
ggsave(filename = file.path("docs", "deaths.png"), plot = p,
height = 6, width = 10, units="in", dpi = 300,
bg = "transparent")
